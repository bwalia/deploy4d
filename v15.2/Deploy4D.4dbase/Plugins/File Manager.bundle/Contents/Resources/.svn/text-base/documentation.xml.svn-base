<?xml version="1.0" encoding="UTF-8" standalone="no" ?><ex4D:plugin xmlns:ex4D="http://www.4d.com/plugin">  <!--File Manager-->  <ex4D:documentation name="File Manager" plugin-id="10023">    <ex4D:plugin-description>      <!-- write documentation for File Manager here -->	  <p>This plugin offers low level access to typical file system operations on the Mac platform.</p>	      </ex4D:plugin-description>    <ex4D:commands>      <ex4D:command-group command-group-id="1" name="Application Directory">        <ex4D:command command-id="1" name="PATH Get directory">          <ex4D:command-description>            <!-- write documentation for PATH Get directory here -->			<p>This command returns the path to directories where the appliation can store custom data.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="directory" type="L">            <!-- write documentation for $1 (LONGINT) here-->			<p>The kind of directory. 3 types are supported.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="create" type="L">            <!-- write documentation for $2 (LONGINT) here-->			<p>Whether or not to create the path, including intermediate folders, if the path doesn't exist.</p>          </ex4D:argument>          <ex4D:argument argument-id="3" label="type" type="L">            <!-- write documentation for $3 (LONGINT) here-->			<p>The kind of path representation. 3 types are supported.</p>			          </ex4D:argument>          <ex4D:return-value label="path" type="T">            <!-- write documentation for return value (TEXT) here-->			<p>The full path, in the requested format, to the specified directory.</p>			          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>      <ex4D:command-group command-group-id="2" name="File Manager">        <ex4D:command command-id="2" name="ITEM Duplicate">          <ex4D:command-description>            <!-- write documentation for ITEM Duplicate here -->			<p>This command duplicates an item at its current location. A localized suffix or prefix is added automatically.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="path" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The path to the item to duplicate.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>Returns 1 if successful, otherwise 0.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="3" name="ITEM Recycle">          <ex4D:command-description>            <!-- write documentation for ITEM Recycle here -->			<p>This command moves an item at to the trash.</p> 			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="path" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The path to the item to trash.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>Returns 1 if successful, otherwise 0.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="4" name="ITEM Remove">          <ex4D:command-description>            <!-- write documentation for ITEM Remove here -->			<p>This command destroys an item.</p> 			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="path" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The path to the item to destroy.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>Returns 1 if successful, otherwise 0.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="5" name="ITEM Move">          <ex4D:command-description>            <!-- write documentation for ITEM Move here -->			<p>This command moves an item to a new location.</p> 			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="source" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The path to the item to move.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="destination" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The new path name of the item.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>Returns 1 if successful, otherwise 0.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="6" name="ITEM Copy">          <ex4D:command-description>            <!-- write documentation for ITEM Copy here -->			<p>This command copies an item to a new location.</p> 			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="source" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The path to the item to copy.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="destination" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The new path name of the item.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>Returns 1 if successful, otherwise 0.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="7" name="DIRECTORY LIST CONTENT">          <ex4D:command-description>            <!-- write documentation for DIRECTORY LIST CONTENT here -->			<p>This command returns the full paths of all items in a folder, one level deep, in the requested format.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="folder" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The path to the folder to examine.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="paths" type="Y">            <!-- write documentation for $2 (ARRAY) here-->			<p>The full paths of all items in a folder.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="type" type="L">            <!-- write documentation for $3 (LONGINT) here-->			<p>The kind of path representation. 3 types are supported.</p>			          </ex4D:argument>        </ex4D:command>        <ex4D:command command-id="8" name="DIRECTORY LIST SUBPATH">          <ex4D:command-description>            <!-- write documentation for DIRECTORY LIST SUBPATH here -->			<p>This command returns the full paths of all items in a folder, recursively, in the requested format.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="folder" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The path to the folder to examine.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="paths" type="Y">            <!-- write documentation for $2 (ARRAY) here-->			<p>The full paths of all items in a folder, recursively.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="type" type="L">            <!-- write documentation for $3 (LONGINT) here-->			<p>The kind of path representation. 3 types are supported.</p>			          </ex4D:argument>        </ex4D:command>        <ex4D:command command-id="9" name="ITEM Test path">          <ex4D:command-description>            <!-- write documentation for ITEM Test path here -->			<p>This command can be used to find out if a file system item is a file, folder or package. Note that a package is a folder too.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="path" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The path to the item whose name you want to examine.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="type" type="L">            <!-- write documentation for $2 (LONGINT) here-->			<p>The item type to test against.</p>			          </ex4D:argument>          <ex4D:return-value label="result" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>Returns 1 if true, otherwise 0.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="10" name="PATH Get localized name">          <ex4D:command-description>            <!-- write documentation for PATH Get localized name here -->			<p>This command returns the localized display name of a file system item (folder or file).</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="path" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The path to the item whose name you want to examine.</p>						          </ex4D:argument>          <ex4D:return-value label="name" type="T">            <!-- write documentation for return value (TEXT) here-->			<p>The localized display name of the specified path component. The name is not appropriate for file system operation.</p>			          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>    </ex4D:commands>    <ex4D:constants>      <ex4D:constant-group constant-group-id="1" name="Application Directory" number="10023">        <ex4D:constant constant-id="1" name="Application Support" type="L" value="14">          <!-- write documentation for Application Support (14) here-->		  <p>The path ~/Library/Application Support/{Application Name}. The name is read from the main application's property list.</p>			  		          </ex4D:constant>        <ex4D:constant constant-id="2" name="Caches" type="L" value="13">          <!-- write documentation for Caches (13) here-->		  <p>The path ~/Library/Caches/{Application Name}. The name is read from the main application's property list.</p>	        </ex4D:constant>        <ex4D:constant constant-id="3" name="Library" type="L" value="5">          <!-- write documentation for Library (5) here-->		  <p>The path ~/Library/{Application Name}. The name is read from the main application's property list.</p>		  		          </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="2" name="Application Directory Options" number="10024">        <ex4D:constant constant-id="1" name="Create Directory" type="L" value="1">          <!-- write documentation for Create Directory (1) here-->		  <p>Construct the requested path, and create it if it does not exist, including intermedidate folders.</p>		  		          </ex4D:constant>        <ex4D:constant constant-id="2" name="Do Not Create Directory" type="L" value="0">          <!-- write documentation for Do Not Create Directory (0) here-->		  <p>Construct the requested path, but do not create it.</p>		          </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="3" name="Path Format" number="10025">        <ex4D:constant constant-id="1" name="Path Format HFS" type="L" value="0">          <!-- write documentation for Path Format HFS (0) here-->		  <p>The full path, : delimited and a : after the final component if it is a folder.</p>		          </ex4D:constant>        <ex4D:constant constant-id="2" name="Path Format POSIX" type="L" value="1">          <!-- write documentation for Path Format POSIX (1) here-->		  <p>The full path, / delimited and no slash after the final component, whether it is a folder or not.</p> 		  		          </ex4D:constant>        <ex4D:constant constant-id="3" name="Path Format URL" type="L" value="2">          <!-- write documentation for Path Format URL (2) here-->		  <p>The full path URL, starting with file:// and ending with a / if the final component is a folder.</p>		          </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="4" name="Path Type" number="10026">        <ex4D:constant constant-id="1" name="Package Exists" type="L" value="2">          <!-- write documentation for Package Exists (2) here-->		  <p>The item is a package.</p>		          </ex4D:constant>        <ex4D:constant constant-id="2" name="File Exists" type="L" value="0">          <!-- write documentation for File Exists (0) here-->		<p>The item is a file.</p>		        </ex4D:constant>        <ex4D:constant constant-id="3" name="Directory Exists" type="L" value="1">          <!-- write documentation for Directory Exists (1) here-->		   <p>The item is a directory.</p>		          </ex4D:constant>      </ex4D:constant-group>    </ex4D:constants>  </ex4D:documentation></ex4D:plugin>